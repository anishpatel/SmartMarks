# this tag identifies individual documents. case sensitive.
doctag=REUTERS

# these are the tags for the text to be used. case sensitive.
bodytags=TITLE BODY

# labeltag is the tag for the categories.
# for mkdict/vectorize, the actual category name is specified on commandline.
labeltag=LABELS

# input can be a zip file or an xml file. the zip file can contain
# xml files. there can be nested zip files (as long as eventually there
# are xml files).
infile=ChromeBookmarks.xml

# input dictionary for vectorize, etc.
dictionary=dict.txt

# stopwords to ignore for dictionary creation.
# words are one per line. case-insensitive.
stopwords=stopwords.txt

# stem dictionary used by stemmer. if file name is blank, stemming not done.
# 2 words per line. second word is the stem for the first one.
# eg: in entry "was be", "be" is a stem for "was".
stems=

# minimum-frequency of words to include in dictionary.
# default value is 1
minimum-frequency=2

# sparse vectorfile used as input for linear, etc.
# the sparse vectors should typically correspond to the documents in infile.
vectorfile=

# indexfile for storing the inverted index (generated by vectorize).
# other programs use the indexfile to speed things up. it is optional.
# if it is specified, it must correspond to the vectorfile.
indexfile=

# both these are needed for generating multiword features.
# multi-word-length is the max number of words in a multiword feature.
# multi-word-span is the max distance between the individual words.
# in this property file they are commented out and not used.
#multi-word-length=2
#multi-word-span=2

# signif-level is used to filter multiword features using a
# significance test. it defaults to 0.
# this too has been commented out in this property file.
#signif-level=0.025

# feature-type can be tf, binary or tf*idf (default is tf).
feature-type=tf*idf

# properties for customizing words: word-delimiters and whitespace-chars.
# default value of word-delimiters is " \n\t\r,.;:!?()<>[]+\"\'"
# and for whitespace-chars it is  " \n\t\r".
# it is recommended that the default values be used.
# but if you need to change these for your application, specify them here.
# here, for illustration, we add the char - as a word delimiter.
word-delimiters=
#" \n\t\r,.;:!?()<>[]+\"\'-"
#whitespace-chars=

# sentence-delimiters are non-whitespacechars that can follow end-of-sentence
# periods. ordinarily, an end-of-sentence period is always followed by a
# whitespace char. but, for example, in oldreuters, the doublequote sign(") can
# follow immediately after an end-of-sentence period. in newreuters, the
# character < can follow an end-of-sentence period.
# specify these non-whitespace chars here if necessary. default value is null.
sentence-delimiters=
#"\"<"

# the following four properties are used by the linear categorizer.
# default values are used if they are not specified (or left blank).
# lambda controls the search space size. default value is 0.001,
# but 0.0001 may also be tried. values must be greater than zero.
# learning-rate has a default value of 0.25 but other values greater than
# zero may be specified.
# linear-iterations controls the number of iterations. the default value is
# set to 40, but higher values (eg, 400) may also be specified.
# decision-threshold controls the tradeoff between precision and recall.
# the default value is 0.0, but use a negative number (eg -0.25) to favour
# recall.
#lambda=
#learning-rate=
decision-threshold=
#-0.3

# the following properties are used by naive bayes.
# probability-threshold must be exceeded for a positive classification.
# reject-threshold must be exceeded for any classification.
# default values are 0.5 for both.
probability-threshold=
#0.7
reject-threshold=
#0.6

# the following properties specify the colors used by tagNames to highlight
# the PER, LOC, ORG and MISC named categories. if the values are not
# specified, the following default values are used:
# PER=blue, LOC=green, ORG=red, MISC=orange
per-color=
loc-color=
org-color=
misc-color=
